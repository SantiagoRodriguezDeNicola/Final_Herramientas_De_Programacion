@model Final.ViewModels.StockCreateViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Agregar stock</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Stock.Clothe.Name" class="control-label"></label>
                <select asp-for="Stock.ClotheId" class="form-control">
                    @if (Model.Clothes != null && Model.Clothes.Count > 0){
                        @foreach (var item in Model.Clothes) {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }else{
                        <option value="">No hay prendas subidas. Aguegue una.</option>
                    }                   
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Stock.Quantity" class="control-label"></label>
                <input asp-for="Stock.Quantity" class="form-control" type="number" value="1"/>
                <span asp-validation-for="Stock.Quantity" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="Stock.BrandId" value=@Model.BrandId/>
            <div class="form-group mt-3">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Artist" asp-action="Index" class="btn btn-primary">Volver a la lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}